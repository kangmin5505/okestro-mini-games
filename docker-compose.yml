version: "3"

services:
  frontend:
    restart: always
    container_name: frontend
    image: nginx:latest
    depends_on:
      - backend
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/html:/usr/share/nginx/html
      - ./docker/nginx/images:/usr/share/nginx/images
    ports:
      - "80:80"
    networks:
      - front-tier
    environment:
      TZ: ${TIME_ZONE}

  backend:
    restart: always
    container_name: backend
    image: my-tomcat
    build: .
    depends_on:
      - database
    networks:
      - front-tier
      - back-tier
      - prometheus-tier
      - redis-tier
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:${MARIADB_PORT}/${MARIADB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MARIADB_USER}
      SPRING_DATASOURCE_PASSWORD: ${MARIADB_PASSWORD}
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET}
      FE_HTTP_URL: ${FE_HTTP_URL}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      TZ: ${TIME_ZONE}

  database:
    restart: always
    container_name: database
    image: mariadb:latest
    volumes:
      - ./docker/mariadb/data:/var/lib/mysql
    networks:
      - back-tier
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      TZ: ${TIME_ZONE}

  prometheus:
    restart: always
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus/config:/etc/prometheus
      - ./docker/prometheus/volume:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend
    networks:
      - prometheus-tier
      - grafana-tier
    environment:
      TZ: ${TIME_ZONE}

  grafana:
    restart: always
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./docker/grafana/volume:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - grafana-tier
    environment:
      TZ: ${TIME_ZONE}

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - prometheus-tier

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - redis-tier
    environment:
      REDIS_PORT: ${REDIS_PORT}
      TZ: ${TIME_ZONE}

networks:
  front-tier:
    name: front-tier
  back-tier:
    name: back-tier
  prometheus-tier:
    name: prometheus-tier
  grafana-tier:
    name: grafana-tier
  redis-tier:
    name: redis-tier
